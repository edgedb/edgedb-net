// AUTOGENERATED: DO NOT MODIFY
// edgeql:8F4282FFB3ADCA549B2F18362FAE328971409954B3CFA1B28AD5CCE1F74156AC
// Generated on 2022-12-06T21:23:52.6086810Z
#nullable enable
using EdgeDB;

namespace EdgeDB.Generated;

/// <summary>
///     A class representing the query file <c>examples\EdgeDB.Examples.GenerationExample\Scripts\DeleteUser.edgeql</c>, containing both the query string and methods to execute the query.
/// </summary>
public static class DeleteUser
{
    /// <summary>
    ///     A string containing the query defined in <c>examples\EdgeDB.Examples.GenerationExample\Scripts\DeleteUser.edgeql</c>
    /// </summary>
    public static readonly string Query =
@"DELETE Person 
FILTER .email = <str>$email";

    /// <summary>
    ///     Executes the DeleteUser query, defined as:
    ///     <code>
    ///         DELETE Person 
    ///         FILTER .email = &lt;str&gt;$email
    ///     </code>
    /// </summary>
    /// <param name="client">The client to execute the query on.</param>
    /// <param name="email">The email parameter of the query.</param>
    /// <param name="token">A cancellation token used to cancel the asyncronous query.</param>
    /// <returns>A Task representing the asynchronous query operation. The result of the task is the result of the query.</returns>
    public static Task<DeleteUserResult?> ExecuteAsync(IEdgeDBQueryable client, string? email, CancellationToken token = default)
        => client.QuerySingleAsync<DeleteUserResult>(Query, new Dictionary<string, object?>() { { "email", email } }, capabilities: (Capabilities)1ul, token: token);

    /// <summary>
    ///     Executes the DeleteUser query, defined as:
    ///     <code>
    ///         DELETE Person 
    ///         FILTER .email = &lt;str&gt;$email
    ///     </code>
    /// </summary>
    /// <param name="client">The client to execute the query on.</param>
    /// <param name="email">The email parameter of the query.</param>
    /// <param name="token">A cancellation token used to cancel the asyncronous query.</param>
    /// <returns>A Task representing the asynchronous query operation. The result of the task is the result of the query.</returns>
    public static Task<DeleteUserResult?> DeleteUserAsync(this IEdgeDBQueryable client, string? email, CancellationToken token = default)
        => ExecuteAsync(client, email, token: token);
}
#nullable restore
