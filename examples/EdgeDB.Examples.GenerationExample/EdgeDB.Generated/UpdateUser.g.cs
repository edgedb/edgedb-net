// AUTOGENERATED: DO NOT MODIFY
// edgeql:B3B320FF0722D3FB0AACD80281B50A8709A2A23491715978860B6D76FFE85BBD
// Generated on 2023-07-24T15:15:21.9619097Z
#nullable enable
using EdgeDB;
using EdgeDB.DataTypes;

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Text.RegularExpressions;

namespace EdgeDB.Generated;

public static class UpdateUser
{
    /// <summary>
    ///     The string containing the query defined in <c>C:\Users\lynch\source\repos\EdgeDB\examples\EdgeDB.Examples.GenerationExample\Scripts\UpdateUser.edgeql</c>.
    /// </summary>
    public static readonly string Query;
    private static readonly string _queryHex = "57495448200D0A202020206E65775F6E616D65203A3D203C6F7074696F6E616C207374723E246E616D652C0D0A202020206E65775F656D61696C203A3D203C6F7074696F6E616C207374723E24656D61696C0D0A55504441544520506572736F6E0D0A46494C544552202E6964203D203C757569643E2469640D0A534554207B0D0A202020206E616D65203A3D206E65775F6E616D6520494620455849535453206E65775F6E616D6520454C5345202E6E616D652C0D0A20202020656D61696C203A3D206E65775F656D61696C20494620455849535453206E65775F656D61696C20454C5345202E656D61696C0D0A7D";


    static UpdateUser()
    {
        Query = string.Join("", Regex.Split(_queryHex, "(?<=\\G..)(?!$)").Select(x => (char)Convert.ToByte(x, 16)));
    }

    /// <summary>
    ///     Executes the UpdateUser query, defined as:
    ///     <code>
    ///         WITH 
    ///             new_name := &lt;optional str&gt;$name,
    ///             new_email := &lt;optional str&gt;$email
    ///         UPDATE Person
    ///         FILTER .id = &lt;uuid&gt;$id
    ///         SET {
    ///             name := new_name IF EXISTS new_name ELSE .name,
    ///             email := new_email IF EXISTS new_email ELSE .email
    ///         }
    ///     </code>
    /// </summary>
    /// <param name="client">The client to execute the query on.</param>
    /// <param name="id">The id parameter in the query.</param>
    /// <param name="name">The name parameter in the query.</param>
    /// <param name="email">The email parameter in the query.</param>
    public static Task<UpdateUserResult?> ExecuteAsync(IEdgeDBQueryable client, Guid id, String? name = null, String? email = null, CancellationToken token = default)
        => client.QuerySingleAsync<UpdateUserResult>(
            Query, new Dictionary<string, object?>() { { "id", id }, { "name", name }, { "email", email } },
            capabilities: Capabilities.Modifications, token: token
        );

    /// <summary>
    ///     Executes the UpdateUser query, defined as:
    ///     <code>
    ///         WITH 
    ///             new_name := &lt;optional str&gt;$name,
    ///             new_email := &lt;optional str&gt;$email
    ///         UPDATE Person
    ///         FILTER .id = &lt;uuid&gt;$id
    ///         SET {
    ///             name := new_name IF EXISTS new_name ELSE .name,
    ///             email := new_email IF EXISTS new_email ELSE .email
    ///         }
    ///     </code>
    /// </summary>
    /// <param name="client">The client to execute the query on.</param>
    /// <param name="id">The id parameter in the query.</param>
    /// <param name="name">The name parameter in the query.</param>
    /// <param name="email">The email parameter in the query.</param>
    public static Task<UpdateUserResult?> UpdateUserAsync(this IEdgeDBQueryable client, Guid id, String? name = null, String? email = null, CancellationToken token = default)
        => ExecuteAsync(client, id, name, email, token: token);
}
#nullable restore