// AUTOGENERATED: DO NOT MODIFY
// edgeql:B9692A5CA0A9992246361197BEACBDE398A5A30C5DCCC83BCACD8C80D5842FEB
// Generated on 2023-07-24T15:15:21.8729863Z
#nullable enable
using EdgeDB;
using EdgeDB.DataTypes;

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Text.RegularExpressions;

namespace EdgeDB.Generated;

public static class CreateUser
{
    /// <summary>
    ///     The string containing the query defined in <c>C:\Users\lynch\source\repos\EdgeDB\examples\EdgeDB.Examples.GenerationExample\Scripts\CreateUser.edgeql</c>.
    /// </summary>
    public static readonly string Query;
    private static readonly string _queryHex = "494E5345525420506572736F6E207B0D0A20206E616D65203A3D203C7374723E246E616D652C0D0A2020656D61696C203A3D203C7374723E24656D61696C0D0A7D0D0A554E4C45535320434F4E464C494354204F4E202E656D61696C200D0A454C5345202853454C45435420506572736F6E29";


    static CreateUser()
    {
        Query = string.Join("", Regex.Split(_queryHex, "(?<=\\G..)(?!$)").Select(x => (char)Convert.ToByte(x, 16)));
    }

    /// <summary>
    ///     Executes the CreateUser query, defined as:
    ///     <code>
    ///         INSERT Person {
    ///           name := &lt;str&gt;$name,
    ///           email := &lt;str&gt;$email
    ///         }
    ///         UNLESS CONFLICT ON .email 
    ///         ELSE (SELECT Person)
    ///     </code>
    /// </summary>
    /// <param name="client">The client to execute the query on.</param>
    /// <param name="name">The name parameter in the query.</param>
    /// <param name="email">The email parameter in the query.</param>
    public static Task<CreateUserResult> ExecuteAsync(IEdgeDBQueryable client, String name, String email, CancellationToken token = default)
        => client.QueryRequiredSingleAsync<CreateUserResult>(
            Query, new Dictionary<string, object?>() { { "name", name }, { "email", email } },
            capabilities: Capabilities.Modifications, token: token
        );

    /// <summary>
    ///     Executes the CreateUser query, defined as:
    ///     <code>
    ///         INSERT Person {
    ///           name := &lt;str&gt;$name,
    ///           email := &lt;str&gt;$email
    ///         }
    ///         UNLESS CONFLICT ON .email 
    ///         ELSE (SELECT Person)
    ///     </code>
    /// </summary>
    /// <param name="client">The client to execute the query on.</param>
    /// <param name="name">The name parameter in the query.</param>
    /// <param name="email">The email parameter in the query.</param>
    public static Task<CreateUserResult> CreateUserAsync(this IEdgeDBQueryable client, String name, String email, CancellationToken token = default)
        => ExecuteAsync(client, name, email, token: token);
}
#nullable restore